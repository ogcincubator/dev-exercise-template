name: Test your OGC API ⚙️

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  pygeoapi:
    timeout-minutes: 20
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set environment variable for port
      run: cat ./apps/pygeoapi/.env >> $GITHUB_ENV

    - name: Check port
      run: echo $PORT

    - name: Create network
      run: docker network create my-shared-network

    - name: Start pygeoapi
      run: docker compose -f "./apps/pygeoapi/docker-compose.yml" up -d --build
          
    - name: Start teamengine
      run: docker run -d --name=teamengine --add-host=host.docker.internal:host-gateway --publish=9080:8080 --network=my-shared-network ogccite/teamengine-production:1.0-SNAPSHOT

    - name: "install cite-runner"
      run: pipx install ogc-cite-runner

    - name: "Test OGC API - Features compliance"
      run: /root/.local/bin/ogc-cite-runner execute-test-suite http://localhost:9080/teamengine ogcapi-features-1.0 --suite-input iut http://pygeoapi:80 --suite-input noofcollections 3 --output-format markdown

    # - name: "Test OGC API - Features compliance"
    #   uses: OSGeo/ogc-cite-runner@v0.3.0
    #   with:
    #     test_suite_identifier: ogcapi-features-1.0
    #     test_session_arguments:  >-
    #       iut=http://host.docker.internal:5001 noofcollections=3
    #       output-format=markdown

    - name: Stop containers
      if: always()
      run: docker compose -f "./apps/pygeoapi/docker-compose.yml" down -v

    - name: Stop cite-runner
      if: always()
      run: docker stop teamengine && docker rm -f teamengine
